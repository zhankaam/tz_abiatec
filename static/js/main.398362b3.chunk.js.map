{"version":3,"sources":["redux-store/enum/index.ts","components/Button/index.tsx","redux-store/app-reducer.ts","redux-store/index.ts","components/Selectors/index.ts","components/SearchInput/index.tsx","assets/logo.svg","components/Header/index.tsx","components/ContentList/index.tsx","server/index.ts","hooks/useFetchContent.ts","components/Button/fetchMoreButton.tsx","components/App.tsx","index.tsx"],"names":["ActionTypes","Button","props","className","initialState","characters","totalPage","nextPage","isFetching","error","fetchMoreCharactersAC","type","FETCH_MORE_CHARACTERS","payload","removeCharactersAC","REMOVE_CHARACTERS","setTotalPageAC","SET_TOTAL_PAGE","setNextPageAC","SET_NEXT_PAGE","toggleIsFetchingAC","TOGGLE_IS_FETCHING","setAppErrorAC","SET_APP_ERROR","rootReducer","combineReducers","app","state","action","FETCH_CHARACTERS","store","createStore","useTypedSelector","useSelector","selectCharacters","selectError","selectIsFetching","selectNextPage","selectTotalPage","SearchInput","onSearch","useState","value","setValue","dispatch","useDispatch","onSearchChange","useCallback","e","target","onSubmit","onChange","onClick","Header","src","logo","alt","ContentList","content","map","id","image","name","species","location","width","instance","axios","create","baseURL","process","getQuery","page","useFetchContent","imgList","setImgList","get","getCharacters","then","res","data","results","slice","info","next","length","err","response","totalPages","click","FetchMoreButton","App","fetch","fetchMore","isDataLoaded","setIsDataLoaded","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPACYA,E,qECMCC,EAA8B,SAACC,GAAD,OACzC,oCAAQC,UAAU,UAAaD,K,iCDPrBF,K,wCAAAA,E,kDAAAA,E,kCAAAA,E,oCAAAA,E,kCAAAA,E,0CAAAA,E,6CAAAA,M,KEIL,IAAMI,EAAe,CACxBC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,YAAY,EACZC,MAAO,IAgCEC,EAAwB,SAACL,GAAD,MACjC,CACIM,KAAMX,EAAYY,sBAAuBC,QAAS,CAACR,gBAG9CS,EAAqB,iBAC9B,CACIH,KAAMX,EAAYe,kBAAmBF,QAAS,CAACR,WAAY,MAGtDW,EAAiB,SAACV,GAAD,MAC1B,CACIK,KAAMX,EAAYiB,eAAgBJ,QAAS,CAACP,eAGvCY,EAAgB,SAACX,GAAD,MACzB,CACII,KAAMX,EAAYmB,cAAeN,QAAS,CAACN,cAGtCa,EAAqB,SAACZ,GAAD,MAC9B,CACIG,KAAMX,EAAYqB,mBAAoBR,QAAS,CAACL,gBAG3Cc,EAAgB,SAACb,GAAD,MACzB,CACIE,KAAMX,EAAYuB,cAAeV,QAAS,CAACJ,W,QCjE7Ce,EAAcC,YAAgB,CAChCC,IDQsB,WAGF,IAFpBC,EAEmB,uDAFOvB,EAC1BwB,EACmB,uCACnB,OAAQA,EAAOjB,MACX,KAAKX,EAAYY,sBACb,OAAO,2BACAe,GADP,IAEItB,WAAW,GAAD,mBAAMsB,EAAMtB,YAAZ,YAA2BuB,EAAOf,QAAQR,eAE5D,KAAKL,EAAY6B,iBACjB,KAAK7B,EAAYe,kBACjB,KAAKf,EAAYiB,eACjB,KAAKjB,EAAYmB,cACjB,KAAKnB,EAAYqB,mBACjB,KAAKrB,EAAYuB,cACb,OAAO,2BACAI,GACAC,EAAOf,SAElB,QACI,OAAOc,MCzBNG,EAAQC,YAAYP,GAEpBQ,EAAwDC,ICT9DC,EAAmB,SAACP,GAAD,OAA0BA,EAAMD,IAAIrB,YACvD8B,EAAc,SAACR,GAAD,OAA0BA,EAAMD,IAAIjB,OAClD2B,EAAmB,SAACT,GAAD,OAA0BA,EAAMD,IAAIlB,YACvD6B,EAAiB,SAACV,GAAD,OAA0BA,EAAMD,IAAInB,UACrD+B,EAAkB,SAACX,GAAD,OAA0BA,EAAMD,IAAIpB,WCGhDiC,EAAsC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACrCC,mBAAS,IAD4B,mBACxDC,EADwD,KACjDC,EADiD,KAEzDC,EAAWC,cACXpC,EAAQuB,EAAiBG,GAEzBW,EAAiBC,uBAAY,SAACC,GAChCL,EAASK,EAAEC,OAAOP,OAClBjC,GAASmC,EAAStB,EAAc,OACjC,CAACb,EAAOmC,IAELM,EAAWH,uBAAY,kBAAMP,EAASE,KAAQ,CAACA,EAAOF,IAE5D,OACI,sBAAKrC,UAAU,cAAf,UACI,uBACIuC,MAAOA,EACPS,SAAUL,IAEd,cAAC,EAAD,CAAQM,QAASF,EAAjB,wBC3BG,MAA0B,iCCM5BG,G,MAA4B,SAAC,GAAD,IAAEb,EAAF,EAAEA,SAAF,OACrC,yBAAQrC,UAAU,SAAlB,UACI,qBACImD,IAAKC,EACLpD,UAAU,cACVqD,IAAI,SACR,cAAC,EAAD,CAAahB,SAAUA,SCRlBiB,G,MAAsC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAqBjD,OACI,oBAAIvD,UAAW,cAAf,SAnBAuD,EAAQC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,SAA5B,OACR,+BACI,qBACIC,MAAO,IACPX,IAAKO,EACLL,IAAKM,IAET,gCACI,sCACCA,EAFL,KAEaC,EAFb,OAIA,gCACI,2CACCC,EAASF,UAZTF,U,iBCLfM,EAAWC,IAAMC,OAAO,CAC1BC,QAASC,8CAGPC,EAAW,eAACT,EAAD,uDAAgB,GAAIU,EAApB,uDAAmC,EAAnC,sBACJA,EADI,iBACSV,ICMbW,EAAkB,WAAmB,IAAD,EACfhC,mBAA8B,IADf,mBACtCiC,EADsC,KAC7BC,EAD6B,KAEvC/B,EAAWC,cAoDjB,MAAO,CAlDOE,uBAAY,SAACL,GACvB,KDRqB,eAACoB,EAAD,uDAAQ,GAAR,OAAeI,EACvCU,IAAqBL,EAAST,KCQvBe,CAAcnC,GACToC,MAAK,SAACC,GACH,GAAIA,EAAIC,KAAM,CACV,IAAMC,EAAUF,EAAIC,KAAKC,QACzBN,EAAWM,EAAQC,MAAM,EAAG,KAE5BtC,EAAS9B,KACT8B,GRWUvC,EQXiB4E,EAAQC,MAAM,EAAG,IRYhE,CACIvE,KAAMX,EAAY6B,iBAAkBhB,QAAS,CAACR,iBQZ9BuC,EAAS5B,EAAeiE,IACxBrC,EAAS1B,EAAc6D,EAAIC,KAAKG,KAAKC,OAEjCH,EAAQI,OAAS,IACjBzC,EAASxB,GAAmB,IRMvB,IAACf,KQFxB,MAAOiF,GACL1C,EAAS9B,KACT8B,EAAStB,EAAcgE,EAAIC,SAASP,KAAKvE,QACzCmC,EAASxB,GAAmB,OAEjC,CAACwB,IA2BW8B,EAxBG3B,uBAAY,SAC1B2B,EACAc,EACAjF,GAEA,IDnC6BkF,ECmCXf,EAAQA,EAAQW,OAAS,GAAGzB,KAAO4B,EAAWA,EAAWH,OAAS,GAAGzB,GAGnFhB,EAASlC,EAAsB8E,EAAWN,MAAM,ODtCvBO,ECwCJlF,EDxCqB4D,IAAMS,IAAIa,ICyC/CX,MAAK,SAACC,GACH,GAAIA,EAAIC,KAAM,CACV,IAAMC,EAAUF,EAAIC,KAAKC,QACzBrC,EAAS5B,EAAeiE,IACxBrC,EAASlC,EAAsBuE,EAAQC,MAAM,EAAG,MAChDtC,EAAS1B,EAAc6D,EAAIC,KAAKG,KAAKC,aAKtD,CAACxC,MCzDK8C,G,MAAuC,SAAC,GAAe,IAAdtC,EAAa,EAAbA,QAClD,OACI,qBAAKjD,UAAU,YAAf,SACI,cAAC,EAAD,CACIiD,QAASA,EADb,6BCMCuC,EAAM,WAAO,IAAD,EACelB,IADf,mBACdmB,EADc,KACPlC,EADO,KACEmC,EADF,OAEmBpD,oBAAS,GAF5B,mBAEdqD,EAFc,KAEAC,EAFA,KAIf1F,EAAa2B,EAAiBE,GAC9B5B,EAAY0B,EAAiBM,GAC7B/B,EAAWyB,EAAiBK,GAC5B7B,EAAawB,EAAiBI,GAC9B3B,EAAQuB,EAAiBG,GAEzBS,EAAWC,cAEjBmD,qBAAU,WACFF,IACAF,IACAG,GAAgB,MAErB,CAACD,EAAcF,IAmBlB,OAX0B,IAAtBvF,EAAWgF,QAAqC,IAArB/E,EAAU+E,OAChC9E,GAAYF,EAAWA,EAAWgF,OAAS,GAAGzB,KAAOtD,EAAUA,EAAU+E,OAAS,GAAGzB,IACtFhB,EAASxB,GAAmB,IAEH,IAAtBf,EAAWgF,OAClBzC,EAASxB,GAAmB,IAE5BwB,EAASxB,GAAmB,IAK5B,sBAAKjB,UAAU,MAAf,UACI,cAAC,EAAD,CAAQqC,SAAUoD,IAClB,qDACA,6BAAKnF,IACL,cAAC,EAAD,CAAaiD,QAASrD,GAA0BqD,IAC/ClD,GAAc,cAAC,EAAD,CAAiB4C,QAvBf,WAErByC,EADgBxF,GAA0BqD,EACrBpD,EAAWC,UC/BxC0F,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUrE,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRsE,SAASC,eAAe,W","file":"static/js/main.398362b3.chunk.js","sourcesContent":["\r\nexport enum ActionTypes {\r\n    FETCH_CHARACTERS = \"APP/FETCH_CHARACTERS\",\r\n    FETCH_MORE_CHARACTERS = \"APP/FETCH_MORE_CHARACTERS\",\r\n    SET_APP_ERROR = \"APP/SET_APP_ERROR\",\r\n    SET_TOTAL_PAGE = \"APP/SET_TOTAL_PAGE\",\r\n    SET_NEXT_PAGE = \"APP/SET_NEXT_PAGE\",\r\n    REMOVE_CHARACTERS = \"APP/REMOVE_CHARACTERS\",\r\n    TOGGLE_IS_FETCHING = \"APP/TOGGLE_IS_FETCHING\"\r\n}","import React, {MouseEventHandler} from \"react\"\r\nimport \"./index.css\";\r\n\r\ntype PropsType = {\r\n    onClick: MouseEventHandler\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = (props) => (\r\n  <button className=\"button\" {...props} />\r\n);\r\n","import {ActionTypes} from './enum';\r\nimport {AppActionTypes, InitialStateType} from './types';\r\nimport {CharactersResType} from \"../server/types\";\r\n\r\n\r\nexport const initialState = {\r\n    characters: [] as CharactersResType[],\r\n    totalPage: [] as CharactersResType[],\r\n    nextPage: \"\",\r\n    isFetching: true,\r\n    error: \"\",\r\n};\r\n\r\nexport const appReducer = (\r\n    state: InitialStateType = initialState,\r\n    action: AppActionTypes\r\n): InitialStateType => {\r\n    switch (action.type) {\r\n        case ActionTypes.FETCH_MORE_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                characters: [...state.characters, ...action.payload.characters]\r\n            }\r\n        case ActionTypes.FETCH_CHARACTERS:\r\n        case ActionTypes.REMOVE_CHARACTERS:\r\n        case ActionTypes.SET_TOTAL_PAGE:\r\n        case ActionTypes.SET_NEXT_PAGE:\r\n        case ActionTypes.TOGGLE_IS_FETCHING:\r\n        case ActionTypes.SET_APP_ERROR:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const fetchCharactersAC = (characters: CharactersResType[]) => (\r\n    {\r\n        type: ActionTypes.FETCH_CHARACTERS, payload: {characters} as InitialStateType\r\n    } as const);\r\nexport const fetchMoreCharactersAC = (characters: CharactersResType[]) => (\r\n    {\r\n        type: ActionTypes.FETCH_MORE_CHARACTERS, payload: {characters}\r\n    } as const);\r\n\r\nexport const removeCharactersAC = () => (\r\n    {\r\n        type: ActionTypes.REMOVE_CHARACTERS, payload: {characters: [] as CharactersResType[]} as InitialStateType\r\n    } as const);\r\n\r\nexport const setTotalPageAC = (totalPage: CharactersResType[]) => (\r\n    {\r\n        type: ActionTypes.SET_TOTAL_PAGE, payload: {totalPage} as InitialStateType\r\n    } as const);\r\n\r\nexport const setNextPageAC = (nextPage: string) => (\r\n    {\r\n        type: ActionTypes.SET_NEXT_PAGE, payload: {nextPage} as InitialStateType\r\n    } as const);\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => (\r\n    {\r\n        type: ActionTypes.TOGGLE_IS_FETCHING, payload: {isFetching} as InitialStateType\r\n    } as const);\r\n\r\nexport const setAppErrorAC = (error: string) => (\r\n    {\r\n        type: ActionTypes.SET_APP_ERROR, payload: {error} as InitialStateType\r\n    } as const);\r\n\r\n","import {combineReducers, createStore} from 'redux';\r\nimport {appReducer} from './app-reducer';\r\nimport {TypedUseSelectorHook, useSelector} from 'react-redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\nexport const store = createStore(rootReducer);\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n\r\n","import {RootStateType} from \"../../redux-store\";\r\n\r\n const selectCharacters = (state: RootStateType) => state.app.characters;\r\n const selectError = (state: RootStateType) => state.app.error;\r\n const selectIsFetching = (state: RootStateType) => state.app.isFetching;\r\n const selectNextPage = (state: RootStateType) => state.app.nextPage;\r\n const selectTotalPage = (state: RootStateType) => state.app.totalPage;\r\n\r\nexport {\r\n    selectCharacters,\r\n    selectError,\r\n    selectIsFetching,\r\n    selectNextPage,\r\n    selectTotalPage\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {Button} from \"../Button\";\r\nimport \"./index.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../redux-store/app-reducer\";\r\nimport {useTypedSelector} from \"../../redux-store\";\r\nimport {ISearchInput} from \"./types\";\r\nimport{selectError} from \"../Selectors\";\r\n\r\nexport const SearchInput: React.FC<ISearchInput> = ({onSearch}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const error = useTypedSelector(selectError);\r\n\r\n    const onSearchChange = useCallback((e) => {\r\n        setValue(e.target.value);\r\n        error && dispatch(setAppErrorAC(\"\"));\r\n    }, [error, dispatch]);\r\n\r\n    const onSubmit = useCallback(() => onSearch(value), [value, onSearch]);\r\n\r\n    return (\r\n        <div className=\"SearchInput\">\r\n            <input\r\n                value={value}\r\n                onChange={onSearchChange}\r\n            />\r\n            <Button onClick={onSubmit}>Submit</Button>\r\n        </div>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.e1f86449.svg\";","import React from \"react\";\r\nimport {SearchInput} from \"../SearchInput\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport \"./index.css\";\r\nimport {IHeader} from \"./types\";\r\n\r\nexport const Header: React.FC<IHeader> = ({onSearch}) => (\r\n    <header className=\"Header\">\r\n        <img\r\n            src={logo}\r\n            className=\"Header-logo\"\r\n            alt=\"logo\"/>\r\n        <SearchInput onSearch={onSearch}/>\r\n    </header>\r\n);\r\n\r\n","import React from \"react\";\r\nimport {IContentList} from \"./types\";\r\nimport \"./index.css\";\r\n\r\nexport const ContentList: React.FC<IContentList> = ({content}) => {\r\n\r\n    const renderCharacters = () => (\r\n        content.map(({id, image, name, species, location}) =>\r\n            <li key={id}>\r\n                <img\r\n                    width={200}\r\n                    src={image}\r\n                    alt={name}\r\n                />\r\n                <div>\r\n                    <b>Name:</b>\r\n                    {name} ({species})\r\n                </div>\r\n                <div>\r\n                    <b>Location: </b>\r\n                    {location.name}\r\n                </div>\r\n            </li>)\r\n    )\r\n\r\n    return (\r\n        <ul className={\"contentList\"}>\r\n            {renderCharacters()}\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {GetResponseType} from \"./types\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_THE_RICK_AND_MORTY_BASE_URL\r\n});\r\n\r\nconst getQuery = (name: string = '', page: number = 1) => (\r\n    `?page=${page}&name=${name}`\r\n)\r\n\r\nexport const getCharacters = (name = '') => instance\r\n    .get<GetResponseType>(getQuery(name))\r\n\r\nexport const getCharactersByClick = (click:string) => axios.get(click)\r\n\r\n\r\n","import {useCallback, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getCharacters, getCharactersByClick} from \"../server\";\r\nimport {\r\n    fetchCharactersAC, fetchMoreCharactersAC,\r\n    removeCharactersAC, setAppErrorAC,\r\n    setNextPageAC,\r\n    setTotalPageAC,\r\n    toggleIsFetchingAC\r\n} from \"../redux-store/app-reducer\";\r\nimport {IFetchHook} from \"./types\";\r\nimport {CharactersResType} from \"../server/types\";\r\n\r\n\r\nexport const useFetchContent = (): IFetchHook => {\r\n    const [imgList, setImgList] = useState<CharactersResType[]>([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const fetch = useCallback((value?: string) => {\r\n        try {\r\n            getCharacters(value)\r\n                .then((res) => {\r\n                    if (res.data) {\r\n                        const results = res.data.results;\r\n                        setImgList(results.slice(0, 10));\r\n\r\n                        dispatch(removeCharactersAC());\r\n                        dispatch(fetchCharactersAC(results.slice(0, 10)));\r\n                        dispatch(setTotalPageAC(results));\r\n                        dispatch(setNextPageAC(res.data.info.next));\r\n\r\n                        if (results.length > 10) {\r\n                            dispatch(toggleIsFetchingAC(true));\r\n                        }\r\n                    }\r\n                });\r\n        } catch (err) {\r\n            dispatch(removeCharactersAC());\r\n            dispatch(setAppErrorAC(err.response.data.error));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n    const fetchMore = useCallback((\r\n        imgList: CharactersResType[],\r\n        totalPages: CharactersResType[],\r\n        nextPage: string) => {\r\n\r\n        const condition = imgList[imgList.length - 1].id !== totalPages[totalPages.length - 1].id\r\n\r\n        if (condition) {\r\n            dispatch(fetchMoreCharactersAC(totalPages.slice(10)));\r\n        } else {\r\n            getCharactersByClick(nextPage)\r\n                .then((res) => {\r\n                    if (res.data) {\r\n                        const results = res.data.results;\r\n                        dispatch(setTotalPageAC(results));\r\n                        dispatch(fetchMoreCharactersAC(results.slice(0, 10)));\r\n                        dispatch(setNextPageAC(res.data.info.next));\r\n                    }\r\n                });\r\n\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n    return [fetch, imgList, fetchMore];\r\n};\r\n","import React, {MouseEventHandler} from \"react\";\r\nimport {Button} from \"./index\";\r\nimport \"./index.css\";\r\n\r\ntype PropsType = {\r\n    onClick: MouseEventHandler\r\n}\r\n\r\nexport const FetchMoreButton: React.FC<PropsType> = ({onClick}) => {\r\n    return (\r\n        <div className=\"fetchMore\" >\r\n            <Button\r\n                onClick={onClick}\r\n            > Fetch More\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import {Header} from \"./Header\";\r\nimport {ContentList} from \"./ContentList\";\r\nimport {useFetchContent} from \"../hooks/useFetchContent\";\r\nimport \"./App.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {toggleIsFetchingAC} from \"../redux-store/app-reducer\";\r\nimport {FetchMoreButton} from \"./Button/fetchMoreButton\";\r\nimport {useTypedSelector} from \"../redux-store\";\r\nimport {\r\n    selectCharacters,\r\n    selectTotalPage,\r\n    selectNextPage,\r\n    selectIsFetching,\r\n    selectError\r\n} from \"./Selectors\";\r\n\r\nexport const App = () => {\r\n    const [fetch, content, fetchMore] = useFetchContent();\r\n    const [isDataLoaded, setIsDataLoaded] = useState(true);\r\n\r\n    const characters = useTypedSelector(selectCharacters);\r\n    const totalPage = useTypedSelector(selectTotalPage);\r\n    const nextPage = useTypedSelector(selectNextPage);\r\n    const isFetching = useTypedSelector(selectIsFetching);\r\n    const error = useTypedSelector(selectError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isDataLoaded) {\r\n            fetch();\r\n            setIsDataLoaded(false);\r\n        }\r\n    }, [isDataLoaded, fetch]);\r\n\r\n    const fetchMoreHandler = () => {\r\n        let finalList = characters ? characters : content;\r\n        fetchMore(finalList, totalPage, nextPage);\r\n    };\r\n\r\n\r\n    if (characters.length !== 0 && totalPage.length !== 0) {\r\n        if (!nextPage && characters[characters.length - 1].id === totalPage[totalPage.length - 1].id) {\r\n            dispatch(toggleIsFetchingAC(false));\r\n        }\r\n    } else if (characters.length === 0) {\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } else {\r\n        dispatch(toggleIsFetchingAC(true));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header onSearch={fetch}/>\r\n            <h1>Simple content list</h1>\r\n            <h2>{error}</h2>\r\n            <ContentList content={characters ? characters : content}/>\r\n            {isFetching && <FetchMoreButton onClick={fetchMoreHandler}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport {App} from \"./components/App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux-store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}